package com.hahaton.ai;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.Map;

@Service
public class AIAgent {
    
    private final GeminiService geminiService;
    private Map<String, String> trainingResponses;
    
    @Autowired
    public AIAgent(GeminiService geminiService) {
        this.geminiService = geminiService;
        initializeResponses();
    }
    
    private void initializeResponses() {
        trainingResponses = new HashMap<>();
        trainingResponses.put("java", "Java - —ç—Ç–æ –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏: –∫–ª–∞—Å—Å—ã, –æ–±—ä–µ–∫—Ç—ã, –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º, –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è.");
        trainingResponses.put("spring", "Spring Framework - —ç—Ç–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è Java. –û–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç IoC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, AOP, —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.");
        trainingResponses.put("react", "React - —ç—Ç–æ JavaScript –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π DOM.");
        trainingResponses.put("maven", "Maven - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏. –û–Ω –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Å–±–æ—Ä–∫—É, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Java –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.");
        trainingResponses.put("git", "Git - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π. –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ.");
        trainingResponses.put("docker", "Docker - —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–ø–∞–∫–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏.");
        trainingResponses.put("sql", "SQL - —ç—Ç–æ —è–∑—ã–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –¥–∞–Ω–Ω—ã–º.");
        trainingResponses.put("api", "API (Application Programming Interface) - —ç—Ç–æ –Ω–∞–±–æ—Ä –ø—Ä–∞–≤–∏–ª –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏. REST API –∏—Å–ø–æ–ª—å–∑—É–µ—Ç HTTP –º–µ—Ç–æ–¥—ã.");
        trainingResponses.put("html", "HTML - —ç—Ç–æ —è–∑—ã–∫ —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü. –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.");
        trainingResponses.put("css", "CSS - —ç—Ç–æ —è–∑—ã–∫ —Å—Ç–∏–ª–µ–π –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è HTML –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.");
    }
    
    public String getResponse(String question) {
        if (question == null || question.trim().isEmpty()) {
            return "–ü—Ä–∏–≤–µ—Ç! –Ø AI –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –æ–±—É—á–µ–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é, —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞—é –Ω–∞ Google Gemini! üöÄ –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏!";
        }
        
        String lowerQuestion = question.toLowerCase();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        String topic = determineTopic(lowerQuestion);
        if (topic != null && trainingResponses.containsKey(topic)) {
            return trainingResponses.get(topic);
        }
        
        // –î–ª—è —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º Gemini API
        try {
            return geminiService.generateResponse(question);
        } catch (Exception e) {
            System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini API: " + e.getMessage());
            // Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
            return generateGeneralResponse(question);
        }
    }
    
    private String determineTopic(String question) {
        if (question.contains("java") || question.contains("–¥–∂–∞–≤–∞")) return "java";
        if (question.contains("spring") || question.contains("—Å–ø—Ä–∏–Ω–≥")) return "spring";
        if (question.contains("react") || question.contains("—Ä–µ–∞–∫—Ç")) return "react";
        if (question.contains("maven") || question.contains("–º–∞–≤–µ–Ω")) return "maven";
        if (question.contains("git") || question.contains("–≥–∏—Ç")) return "git";
        if (question.contains("docker") || question.contains("–¥–æ–∫–µ—Ä")) return "docker";
        if (question.contains("sql") || question.contains("–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")) return "sql";
        if (question.contains("api") || question.contains("–≤–µ–±")) return "api";
        if (question.contains("html") || question.contains("—Ö—Ç–º–ª")) return "html";
        if (question.contains("css") || question.contains("—Å—Ç–∏–ª–∏")) return "css";
        
        return null;
    }
    
    private String generateGeneralResponse(String question) {
        if (question.contains("–∫–∞–∫") || question.contains("how")) {
            return "–î–ª—è –∏–∑—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é: 1) –ù–∞—á–∞—Ç—å —Å –æ—Å–Ω–æ–≤ —è–∑—ã–∫–∞, 2) –†–µ—à–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏, 3) –ò–∑—É—á–∞—Ç—å —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏, 4) –†–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–∞–º–∏!";
        }
        
        if (question.contains("—á—Ç–æ") || question.contains("what")) {
            return "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ - —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞. –û–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º—ã, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!";
        }
        
        if (question.contains("–ø–æ—á–µ–º—É") || question.contains("why")) {
            return "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, —Ä–µ—à–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≤ IT!";
        }
        
        return "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ - —ç—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä, –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ. –ù–∞—á–Ω–∏—Ç–µ —Å –æ—Å–Ω–æ–≤ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≥–ª—É–±–ª—è–π—Ç–µ—Å—å –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –æ–±–ª–∞—Å—Ç–∏!";
    }
    
    public String getRandomTip() {
        return geminiService.getRandomTip();
    }
}
