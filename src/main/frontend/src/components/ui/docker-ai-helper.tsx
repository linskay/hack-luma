import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Bot, MessageCircle, X, Send, Sparkles, Terminal, BookOpen, Lightbulb } from 'lucide-react';

interface DockerAIHelperProps {
  currentLevel?: number;
  currentTask?: string;
}

export function DockerAIHelper({ currentLevel = 1, currentTask = '' }: DockerAIHelperProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState<Array<{ type: 'user' | 'ai', content: string }>>([
    {
      type: 'ai',
      content: '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à AI –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ Docker. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏–∏! üê≥'
    }
  ]);
  const [inputMessage, setInputMessage] = useState('');
  const [isTyping, setIsTyping] = useState(false);

  const dockerTips = {
    1: [
      'üí° **–£—Ä–æ–≤–µ–Ω—å 1 - –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:**',
      '‚Ä¢ `docker ps` - –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã',
      '‚Ä¢ `docker ps -a` - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–≤–∫–ª—é—á–∞—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ)',
      '‚Ä¢ `docker logs` - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞',
      '‚Ä¢ `docker inspect` - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ',
      '',
      'üîç **–°–æ–≤–µ—Ç:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–ª–∞–≥–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä `--filter "since=24h"` –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏'
    ],
    2: [
      'üí° **–£—Ä–æ–≤–µ–Ω—å 2 - –û–±—Ä–∞–∑—ã –∏ —Å–ª–æ–∏:**',
      '‚Ä¢ `docker images` - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤',
      '‚Ä¢ `docker history` - –∏—Å—Ç–æ—Ä–∏—è —Å–ª–æ–µ–≤ –æ–±—Ä–∞–∑–∞',
      '‚Ä¢ `docker diff` - –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ',
      '‚Ä¢ `docker inspect` - –¥–µ—Ç–∞–ª–∏ –æ–±—Ä–∞–∑–∞',
      '',
      'üîç **–°–æ–≤–µ—Ç:** –ö–∞–∂–¥—ã–π —Å–ª–æ–π –≤ `docker history` –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ —Ä–∞–∑–º–µ—Ä. –ò—â–∏—Ç–µ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è!'
    ],
    3: [
      'üí° **–£—Ä–æ–≤–µ–Ω—å 3 - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏:**',
      '‚Ä¢ `docker exec` - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ',
      '‚Ä¢ `docker stats` - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤',
      '‚Ä¢ `docker run --memory` - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏',
      '‚Ä¢ `docker run --cpus` - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ CPU',
      '',
      'üîç **–°–æ–≤–µ—Ç:** –§–ª–∞–≥ `-it` –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è `docker exec`'
    ],
    4: [
      'üí° **–£—Ä–æ–≤–µ–Ω—å 4 - Docker —Å–µ—Ç–∏:**',
      '‚Ä¢ `docker network ls` - —Å–ø–∏—Å–æ–∫ —Å–µ—Ç–µ–π',
      '‚Ä¢ `docker network inspect` - –¥–µ—Ç–∞–ª–∏ —Å–µ—Ç–∏',
      '‚Ä¢ `docker network prune` - –æ—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–µ—Ç–µ–π',
      '‚Ä¢ `docker network connect` - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫ —Å–µ—Ç–∏',
      '',
      'üîç **–°–æ–≤–µ—Ç:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `--dry-run` –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ'
    ],
    5: [
      'üí° **–£—Ä–æ–≤–µ–Ω—å 5 - Volumes –∏ –¥–∞–Ω–Ω—ã–µ:**',
      '‚Ä¢ `docker volume ls` - —Å–ø–∏—Å–æ–∫ volumes',
      '‚Ä¢ `docker volume inspect` - –¥–µ—Ç–∞–ª–∏ volume',
      '‚Ä¢ `docker inspect -f "{{ .Mounts }}"` - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞',
      '‚Ä¢ `docker run -v` - –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ volume',
      '',
      'üîç **–°–æ–≤–µ—Ç:** Go template `{{ .Mounts }}` –ø–æ–∫–∞–∂–µ—Ç –≤—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ volumes –∏ bind mounts'
    ],
    6: [
      'üí° **–£—Ä–æ–≤–µ–Ω—å 6 - Docker Swarm:**',
      '‚Ä¢ `docker service ls` - —Å–ø–∏—Å–æ–∫ —Å–ª—É–∂–±',
      '‚Ä¢ `docker stack ls` - —Å–ø–∏—Å–æ–∫ —Å—Ç–µ–∫–æ–≤',
      '‚Ä¢ `docker node ls` - —Å–ø–∏—Å–æ–∫ –Ω–æ–¥',
      '‚Ä¢ `docker service inspect` - –¥–µ—Ç–∞–ª–∏ —Å–ª—É–∂–±—ã',
      '',
      'üîç **–°–æ–≤–µ—Ç:** –§–∏–ª—å—Ç—Ä—ã –≤ Swarm –∫–æ–º–∞–Ω–¥–∞—Ö —Ä–∞–±–æ—Ç–∞—é—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ–±—ã—á–Ω—ã–º Docker –∫–æ–º–∞–Ω–¥–∞–º'
    ]
  };

  const quickCommands = [
    'docker ps -a',
    'docker logs --tail 100',
    'docker exec -it container_name bash',
    'docker inspect container_name',
    'docker network ls',
    'docker volume ls',
    'docker system df',
    'docker stats'
  ];

  const handleSendMessage = async () => {
    if (!inputMessage.trim()) return;

    const userMessage = inputMessage.trim();
    setInputMessage('');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    setMessages(prev => [...prev, { type: 'user', content: userMessage }]);
    setIsTyping(true);

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç AI
    setTimeout(() => {
      const aiResponse = generateAIResponse(userMessage);
      setMessages(prev => [...prev, { type: 'ai', content: aiResponse }]);
      setIsTyping(false);
    }, 1000);
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    setInputMessage(value);
  };

  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === 'Enter') {
      handleSendMessage();
    }
  };

  const generateAIResponse = (userMessage: string): string => {
    const message = userMessage.toLowerCase();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –¥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–æ–≤–µ—Ç—ã
    if (message.includes('ps') || message.includes('–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä')) {
      return `üîç **Docker PS –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ \`docker ps\` - —Ç–æ–ª—å–∫–æ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
‚Ä¢ \`docker ps -a\` - –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
‚Ä¢ \`docker ps --filter "status=exited"\` - —Ç–æ–ª—å–∫–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ
‚Ä¢ \`docker ps --format "table {{.ID}}\\t{{.Names}}\\t{{.Status}}"\` - –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç

üí° **–ü–æ–ª–µ–∑–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:**
‚Ä¢ \`--filter "name=web*"\` - –ø–æ –∏–º–µ–Ω–∏
‚Ä¢ \`--filter "label=environment=prod"\` - –ø–æ –º–µ—Ç–∫–∞–º
‚Ä¢ \`--filter "since=24h"\` - –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è`;
    }
    
    if (message.includes('logs') || message.includes('–ª–æ–≥–∏')) {
      return `üìã **Docker Logs –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ \`docker logs container_name\` - –≤—Å–µ –ª–æ–≥–∏
‚Ä¢ \`docker logs --tail 100 container_name\` - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫
‚Ä¢ \`docker logs -f container_name\` - —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ \`docker logs --since "2024-01-01T00:00:00" container_name\` - –ª–æ–≥–∏ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏

üí° **–§–ª–∞–≥–∏:**
‚Ä¢ \`--tail N\` - –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç—Ä–æ–∫
‚Ä¢ \`-f\` –∏–ª–∏ \`--follow\` - —Å–ª–µ–¥–∏—Ç—å –∑–∞ –Ω–æ–≤—ã–º–∏ –ª–æ–≥–∞–º–∏
‚Ä¢ \`--since\` - –ª–æ–≥–∏ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ \`--until\` - –ª–æ–≥–∏ –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏`;
    }
    
    if (message.includes('exec') || message.includes('–≤—ã–ø–æ–ª–Ω–∏—Ç—å')) {
      return `‚ö° **Docker Exec –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ \`docker exec -it container_name bash\` - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è bash —Å–µ—Å—Å–∏—è
‚Ä¢ \`docker exec container_name ls -la /\` - –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–π—Ç–∏
‚Ä¢ \`docker exec -u root container_name whoami\` - –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Ç –∏–º–µ–Ω–∏ root
‚Ä¢ \`docker exec -w /app container_name pwd\` - —É–∫–∞–∑–∞—Ç—å —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é

üí° **–í–∞–∂–Ω—ã–µ —Ñ–ª–∞–≥–∏:**
‚Ä¢ \`-i\` - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º (stdin)
‚Ä¢ \`-t\` - –≤—ã–¥–µ–ª–∏—Ç—å TTY
‚Ä¢ \`-u\` - —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ \`-w\` - —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è`;
    }
    
    if (message.includes('network') || message.includes('—Å–µ—Ç—å')) {
      return `üåê **Docker Network –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ \`docker network ls\` - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–µ—Ç–µ–π
‚Ä¢ \`docker network inspect network_name\` - –¥–µ—Ç–∞–ª–∏ —Å–µ—Ç–∏
‚Ä¢ \`docker network create my_network\` - —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ç—å
‚Ä¢ \`docker network prune\` - —É–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–µ—Ç–∏
‚Ä¢ \`docker network connect network_name container_name\` - –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

üí° **–¢–∏–ø—ã —Å–µ—Ç–µ–π:**
‚Ä¢ \`bridge\` - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–µ—Ç—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
‚Ä¢ \`host\` - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ç—å —Ö–æ—Å—Ç–∞
‚Ä¢ \`none\` - –±–µ–∑ —Å–µ—Ç–µ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
‚Ä¢ \`overlay\` - –¥–ª—è Swarm –∫–ª–∞—Å—Ç–µ—Ä–æ–≤`;
    }
    
    if (message.includes('volume') || message.includes('–¥–∞–Ω–Ω—ã–µ')) {
      return `üíæ **Docker Volume –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ \`docker volume ls\` - —Å–ø–∏—Å–æ–∫ volumes
‚Ä¢ \`docker volume create my_volume\` - —Å–æ–∑–¥–∞—Ç—å volume
‚Ä¢ \`docker volume inspect volume_name\` - –¥–µ—Ç–∞–ª–∏ volume
‚Ä¢ \`docker volume prune\` - —É–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ volumes
‚Ä¢ \`docker run -v my_volume:/app/data image\` - –º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å volume

üí° **–ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:**
‚Ä¢ \`-v volume_name:/path\` - –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π volume
‚Ä¢ \`-v /host/path:/container/path\` - bind mount
‚Ä¢ \`-v /host/path:/container/path:ro\` - —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è`;
    }
    
    if (message.includes('swarm') || message.includes('–∫–ª–∞—Å—Ç–µ—Ä')) {
      return `‚öîÔ∏è **Docker Swarm –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ \`docker swarm init\` - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Swarm
‚Ä¢ \`docker service create --name web nginx\` - —Å–æ–∑–¥–∞—Ç—å —Å–ª—É–∂–±—É
‚Ä¢ \`docker service ls\` - —Å–ø–∏—Å–æ–∫ —Å–ª—É–∂–±
‚Ä¢ \`docker stack deploy -c docker-compose.yml my_stack\` - —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å —Å—Ç–µ–∫
‚Ä¢ \`docker node ls\` - —Å–ø–∏—Å–æ–∫ –Ω–æ–¥

üí° **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É–∂–±–∞–º–∏:**
‚Ä¢ \`docker service scale web=3\` - –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –¥–æ 3 —Ä–µ–ø–ª–∏–∫
‚Ä¢ \`docker service update --image nginx:latest web\` - –æ–±–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–∑
‚Ä¢ \`docker service logs web\` - –ª–æ–≥–∏ —Å–ª—É–∂–±—ã`;
    }
    
    if (message.includes('–ø–æ–º–æ—â—å') || message.includes('help') || message.includes('—Å–æ–≤–µ—Ç')) {
      return `üéØ **–û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ Docker:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`--help\` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –ª—é–±–æ–π –∫–æ–º–∞–Ω–¥–µ
‚Ä¢ –ö–æ–º–∞–Ω–¥—ã —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ tab –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–º–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –æ–±—Ä–∞–∑–æ–≤
‚Ä¢ –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã —Å pipe (|) –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–∫–∏ (labels) –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤

üîç **–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ \`docker system df\` - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
‚Ä¢ \`docker system prune\` - –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ \`docker stats\` - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ \`docker top container_name\` - –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ`;
    }
    
    // –û–±—â–∏–π –æ—Ç–≤–µ—Ç
    return `ü§ñ **–Ø –ø–æ–Ω–∏–º–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å!** 

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ Docker –∫–æ–º–∞–Ω–¥–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä:
‚Ä¢ "–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞?"
‚Ä¢ "–ö–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ?"
‚Ä¢ "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å Docker —Å–µ—Ç—è–º–∏?"
‚Ä¢ "–ö–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å volumes?"

–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–ø—Ä–∞–≤–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Docker! üê≥`;
  };

  const handleQuickCommand = (command: string) => {
    setInputMessage(command);
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∫–∞–∫ –≤–æ–ø—Ä–æ—Å
    setTimeout(() => {
      const aiResponse = generateAIResponse(command);
      setMessages(prev => [...prev, { type: 'user', content: command }, { type: 'ai', content: aiResponse }]);
    }, 100);
  };

  const toggleAIHelper = () => {
    setIsOpen(!isOpen);
  };

  return (
    <>
      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è AI –ø–æ–º–æ—â–Ω–∏–∫–∞ */}
      <motion.button
        onClick={toggleAIHelper}
        className="fixed bottom-6 right-6 w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full shadow-2xl hover:shadow-blue-500/50 transition-all duration-300 z-[9999] flex items-center justify-center group"
        whileHover={{ scale: 1.1 }}
        whileTap={{ scale: 0.9 }}
      >
        <Bot className="w-8 h-8 text-white" />
        <div className="absolute -top-2 -right-2 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center">
          <Sparkles className="w-3 h-3 text-white" />
        </div>
      </motion.button>

      {/* AI –ø–æ–º–æ—â–Ω–∏–∫ */}
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, scale: 0.8, y: 100 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            exit={{ opacity: 0, scale: 0.8, y: 100 }}
            transition={{ duration: 0.3, ease: "easeOut" }}
            className="fixed bottom-24 right-6 w-96 h-[600px] bg-black/90 backdrop-blur-xl rounded-2xl border border-white/20 shadow-2xl z-[9998] overflow-hidden"
          >
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="bg-gradient-to-r from-blue-500/20 to-purple-500/20 p-4 border-b border-white/20">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center">
                    <Bot className="w-6 h-6 text-white" />
                  </div>
                  <div>
                    <h3 className="text-white font-semibold">Docker AI –ü–æ–º–æ—â–Ω–∏–∫</h3>
                    <p className="text-white/70 text-sm">–£—Ä–æ–≤–µ–Ω—å {currentLevel}</p>
                  </div>
                </div>
                <button
                  onClick={toggleAIHelper}
                  className="p-2 hover:bg-white/20 rounded-lg transition-colors"
                >
                  <X className="w-5 h-5 text-white" />
                </button>
              </div>
            </div>

            {/* –°–æ–≤–µ—Ç—ã –ø–æ —Ç–µ–∫—É—â–µ–º—É —É—Ä–æ–≤–Ω—é */}
            <div className="p-4 bg-white/5 border-b border-white/20">
              <div className="flex items-center space-x-2 mb-3">
                <Lightbulb className="w-5 h-5 text-yellow-400" />
                <span className="text-white font-medium">–°–æ–≤–µ—Ç—ã –¥–ª—è —É—Ä–æ–≤–Ω—è {currentLevel}</span>
              </div>
              <div className="text-white/80 text-sm space-y-1">
                {dockerTips[currentLevel as keyof typeof dockerTips]?.slice(0, 4).map((tip, index) => (
                  <div key={index}>{tip}</div>
                ))}
              </div>
            </div>

            {/* –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã */}
            <div className="p-4 bg-white/5 border-b border-white/20">
              <div className="flex items-center space-x-2 mb-3">
                <Terminal className="w-5 h-5 text-green-400" />
                <span className="text-white font-medium">–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã</span>
              </div>
              <div className="flex flex-wrap gap-2">
                {quickCommands.map((command, index) => (
                  <button
                    key={index}
                    onClick={() => handleQuickCommand(command)}
                    className="px-3 py-1 bg-white/10 hover:bg-white/20 rounded-lg text-white/80 text-xs font-mono transition-colors"
                  >
                    {command}
                  </button>
                ))}
              </div>
            </div>

            {/* –ß–∞—Ç */}
            <div className="flex-1 p-4 overflow-y-auto max-h-64">
              <div className="space-y-4">
                {messages.map((message, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}
                  >
                    <div
                      className={`max-w-[80%] p-3 rounded-lg ${
                        message.type === 'user'
                          ? 'bg-blue-500 text-white'
                          : 'bg-white/10 text-white/90'
                      }`}
                    >
                      <div className="whitespace-pre-line text-sm">{message.content}</div>
                    </div>
                  </motion.div>
                ))}
                
                {isTyping && (
                  <motion.div
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    className="flex justify-start"
                  >
                    <div className="bg-white/10 text-white/90 p-3 rounded-lg">
                      <div className="flex space-x-1">
                        <div className="w-2 h-2 bg-white/60 rounded-full animate-bounce"></div>
                        <div className="w-2 h-2 bg-white/60 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                        <div className="w-2 h-2 bg-white/60 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                      </div>
                    </div>
                  </motion.div>
                )}
              </div>
            </div>

            {/* –í–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è */}
            <div className="p-4 border-t border-white/20">
              <div className="flex space-x-2">
                <input
                  type="text"
                  value={inputMessage}
                  onChange={handleInputChange}
                  onKeyPress={handleKeyPress}
                  placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ Docker..."
                  className="flex-1 bg-white/10 text-white placeholder-white/50 rounded-lg px-3 py-2 text-sm outline-none border border-white/20 focus:border-blue-500 focus:ring-2 focus:ring-blue-500/50"
                  autoFocus={isOpen}
                />
                <button
                  onClick={handleSendMessage}
                  disabled={!inputMessage.trim()}
                  className="p-2 bg-blue-500 hover:bg-blue-600 disabled:bg-white/20 disabled:cursor-not-allowed rounded-lg transition-colors"
                >
                  <Send className="w-4 h-4 text-white" />
                </button>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}
