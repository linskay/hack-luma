import React, { useState, useEffect } from 'react'
import { GradientButton } from './gradient-button'
import { AIHelper } from './ai-helper'
import { MorphingSquare } from './morphing-square'
import { motion, AnimatePresence } from 'framer-motion'
import { FileText, TrendingUp, Send, Briefcase, User, Mail, Star, Target, Zap, CheckCircle, Clock, DollarSign, Brain, MessageSquare, Link } from 'lucide-react'

interface CareerPageProps {
  onNavigate: (page: string) => void
  isLoading: boolean
  activeSection?: string
}

export function CareerPage({ onNavigate, isLoading, activeSection = 'resume' }: CareerPageProps) {
  const [currentSection, setCurrentSection] = useState<string>(activeSection)
  const [isAutoReplyEnabled, setIsAutoReplyEnabled] = useState(false)

  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ–∫—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ activeSection
  useEffect(() => {
    if (activeSection && activeSection !== currentSection) {
      setCurrentSection(activeSection)
    }
  }, [activeSection, currentSection])

  const resumeData = {
    personalInfo: {
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤',
      title: 'Full Stack Developer',
      experience: '3 –≥–æ–¥–∞',
      location: '–ú–æ—Å–∫–≤–∞',
      email: 'alex.petrov@email.com',
      phone: '+7 (999) 123-45-67'
    },
    skills: [
      { name: 'JavaScript', level: 90, category: 'Frontend' },
      { name: 'React', level: 85, category: 'Frontend' },
      { name: 'Node.js', level: 80, category: 'Backend' },
      { name: 'Python', level: 75, category: 'Backend' },
      { name: 'Docker', level: 70, category: 'DevOps' },
      { name: 'Git', level: 85, category: 'Tools' }
    ],
    experience: [
      {
        company: 'TechCorp',
        position: 'Frontend Developer',
        period: '2022 - 2024',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ React, —Ä–∞–±–æ—Ç–∞ —Å REST API'
      },
      {
        company: 'StartUp Inc',
        position: 'Junior Developer',
        period: '2021 - 2022',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±—ç–∫–µ–Ω–¥–æ–º'
      }
    ],
    education: [
      {
        institution: '–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
        degree: '–ë–∞–∫–∞–ª–∞–≤—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏',
        period: '2017 - 2021'
      }
    ]
  }

  const careerPaths = [
    {
      title: 'Frontend Developer',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã',
      skills: ['HTML/CSS', 'JavaScript', 'React', 'Vue.js', 'TypeScript'],
      salary: '80,000 - 150,000 ‚ÇΩ',
      demand: '–í—ã—Å–æ–∫–∏–π',
      color: 'from-blue-500 to-cyan-500',
      icon: 'üíª'
    },
    {
      title: 'Backend Developer',
      description: '–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å–µ—Ä–≤–µ—Ä–Ω—É—é —á–∞—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
      skills: ['Java', 'Spring', 'Python', 'Node.js', 'Databases'],
      salary: '100,000 - 200,000 ‚ÇΩ',
      demand: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π',
      color: 'from-green-500 to-emerald-500',
      icon: '‚öôÔ∏è'
    },
    {
      title: 'Full Stack Developer',
      description: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –∑–∞–¥–∞—á',
      skills: ['Frontend + Backend', 'DevOps', 'Cloud', 'Architecture'],
      salary: '120,000 - 250,000 ‚ÇΩ',
      demand: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π',
      color: 'from-purple-500 to-pink-500',
      icon: 'üöÄ'
    },
    {
      title: 'Data Scientist',
      description: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ AI –º–æ–¥–µ–ª–∏',
      skills: ['Python', 'Machine Learning', 'Statistics', 'SQL', 'Big Data'],
      salary: '150,000 - 300,000 ‚ÇΩ',
      demand: '–í—ã—Å–æ–∫–∏–π',
      color: 'from-orange-500 to-red-500',
      icon: 'üìä'
    },
    {
      title: 'DevOps Engineer',
      description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è',
      skills: ['Docker', 'Kubernetes', 'CI/CD', 'Cloud', 'Linux'],
      salary: '130,000 - 250,000 ‚ÇΩ',
      demand: '–í—ã—Å–æ–∫–∏–π',
      color: 'from-indigo-500 to-blue-500',
      icon: 'üîß'
    },
    {
      title: 'Mobile Developer',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iOS –∏ Android',
      skills: ['Swift', 'Kotlin', 'React Native', 'Flutter', 'Mobile UI/UX'],
      salary: '90,000 - 180,000 ‚ÇΩ',
      demand: '–°—Ä–µ–¥–Ω–∏–π',
      color: 'from-teal-500 to-green-500',
      icon: 'üì±'
    }
  ]

  const companies = [
    { name: '–Ø–Ω–¥–µ–∫—Å', logo: 'üîç', description: '–ö—Ä—É–ø–Ω–µ–π—à–∞—è IT –∫–æ–º–ø–∞–Ω–∏—è –†–æ—Å—Å–∏–∏' },
    { name: 'VK', logo: 'üíô', description: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
    { name: '–°–±–µ—Ä', logo: 'üü¢', description: '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
    { name: '–¢–∏–Ω—å–∫–æ—Ñ—Ñ', logo: 'üü°', description: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
    { name: 'Ozon', logo: 'üü†', description: 'E-commerce –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞' },
    { name: 'Wildberries', logo: 'üü£', description: '–û–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω' }
  ]

  const marketStats = [
    { label: '–†–æ—Å—Ç –∑–∞—Ä–ø–ª–∞—Ç –≤ IT', value: '+15%', icon: TrendingUp, color: 'from-green-500 to-emerald-500' },
    { label: '–û—Ç–∫—Ä—ã—Ç—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π', value: '50,000+', icon: Briefcase, color: 'from-blue-500 to-cyan-500' },
    { label: '–¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ—Å–ª–µ –∫—É—Ä—Å–æ–≤', value: '95%', icon: CheckCircle, color: 'from-purple-500 to-pink-500' }
  ]

  return (
    <div className="min-h-screen">
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-6xl mx-auto p-8 pt-32">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-white mb-4">–ö–∞—Ä—å–µ—Ä–∞ –≤ IT</h1>
          <p className="text-white/70 text-lg">–ü–æ—Å—Ç—Ä–æ–π—Ç–µ —É—Å–ø–µ—à–Ω—É—é –∫–∞—Ä—å–µ—Ä—É –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö!</p>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–¥–µ–ª–æ–≤ */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentSection}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            transition={{ duration: 0.5 }}
          >
            {/* –†–µ–∑—é–º–µ */}
            {currentSection === 'resume' && (
              <div className="space-y-8">
                {/* –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∑—é–º–µ —Å –ò–ò */}
                <div className="bg-gradient-to-r from-blue-500/20 to-cyan-500/20 backdrop-blur-sm rounded-2xl p-6 border border-blue-500/30">
                  <div className="flex items-center justify-between mb-4">
                    <div className="flex items-center space-x-3">
                      <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center">
                        <Brain className="w-6 h-6 text-white" />
                      </div>
                      <div>
                        <h3 className="text-xl font-semibold text-white">–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∑—é–º–µ —Å –ò–ò</h3>
                        <p className="text-white/70 text-sm">–°–æ–∑–¥–∞–π—Ç–µ –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞</p>
                      </div>
                    </div>
                    <div className="flex items-center space-x-3">
                      <span className="px-3 py-1 rounded-full text-sm font-medium bg-blue-500/20 text-blue-400 border border-blue-500/30">
                        –ù–æ–≤–∏–Ω–∫–∞
                      </span>
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                    <div className="bg-white/10 rounded-xl p-4">
                      <h4 className="text-white font-medium mb-2 flex items-center space-x-2">
                        <FileText className="w-4 h-4" />
                        <span>–ê–Ω–∞–ª–∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ–∑—é–º–µ</span>
                      </h4>
                      <p className="text-white/60 text-sm mb-3">–ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Ä–µ–∑—é–º–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç —É–ª—É—á—à–µ–Ω–∏—è</p>
                      <div className="flex items-center space-x-2 text-green-400 text-sm">
                        <CheckCircle className="w-4 h-4" />
                        <span>–î–æ—Å—Ç—É–ø–Ω–æ</span>
                      </div>
                    </div>
                    <div className="bg-white/10 rounded-xl p-4">
                      <h4 className="text-white font-medium mb-2 flex items-center space-x-2">
                        <MessageSquare className="w-4 h-4" />
                        <span>–ò–ò —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ</span>
                      </h4>
                      <p className="text-white/60 text-sm mb-3">–ü–æ–±–µ—Å–µ–¥—É–π—Ç–µ —Å –ò–ò –æ –≤–∞—à–∏—Ö –Ω–∞–≤—ã–∫–∞—Ö –∏ –æ–ø—ã—Ç–µ</p>
                      <div className="flex items-center space-x-2 text-blue-400 text-sm">
                        <Target className="w-4 h-4" />
                        <span>–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è</span>
                      </div>
                    </div>
                  </div>

                  <div className="bg-white/10 rounded-xl p-4 mb-6">
                    <h4 className="text-white font-medium mb-2 flex items-center space-x-2">
                      <Link className="w-4 h-4" />
                      <span>–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –≤–∞–∫–∞–Ω—Å–∏—é</span>
                    </h4>
                    <p className="text-white/60 text-sm mb-3">–ò–ò —Å–æ–∑–¥–∞—Å—Ç —Ä–µ–∑—é–º–µ, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –≤–∞–∫–∞–Ω—Å–∏—é, –∏—Å—Ö–æ–¥—è –∏–∑ –≤–∞—à–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è</p>
                    <div className="flex items-center space-x-2 text-purple-400 text-sm">
                      <Zap className="w-4 h-4" />
                      <span>–£–º–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</span>
                    </div>
                  </div>

                  <div className="flex justify-center">
                    <button className="px-6 py-3 bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white font-medium rounded-xl transition-all duration-300 hover:scale-105 shadow-lg">
                      –ù–∞—á–∞—Ç—å –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ä–µ–∑—é–º–µ
                    </button>
                  </div>
                </div>

                {/* –ê–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ */}
                <div className="bg-gradient-to-r from-purple-500/20 to-pink-500/20 backdrop-blur-sm rounded-2xl p-6 border border-purple-500/30">
                  <div className="flex items-center justify-between mb-4">
                    <div className="flex items-center space-x-3">
                      <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl flex items-center justify-center">
                        <Send className="w-6 h-6 text-white" />
                      </div>
                      <div>
                        <h3 className="text-xl font-semibold text-white">–ê–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏</h3>
                        <p className="text-white/70 text-sm">–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç—ã</p>
                      </div>
                    </div>
                    <div className="flex items-center space-x-3">
                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                        isAutoReplyEnabled 
                          ? 'bg-green-500/20 text-green-400 border border-green-500/30' 
                          : 'bg-red-500/20 text-red-400 border border-red-500/30'
                      }`}>
                        {isAutoReplyEnabled ? '–í–∫–ª—é—á–µ–Ω–æ' : '–í—ã–∫–ª—é—á–µ–Ω–æ'}
                      </span>
                      <button
                        onClick={() => setIsAutoReplyEnabled(!isAutoReplyEnabled)}
                        className={`px-4 py-2 rounded-lg transition-all duration-300 ${
                          isAutoReplyEnabled
                            ? 'bg-red-500 hover:bg-red-600 text-white'
                            : 'bg-green-500 hover:bg-green-600 text-white'
                        }`}
                      >
                        {isAutoReplyEnabled ? '–û—Ç–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'}
                      </button>
                    </div>
                  </div>

                  {isAutoReplyEnabled && (
                    <motion.div
                      initial={{ opacity: 0, height: 0 }}
                      animate={{ opacity: 1, height: 'auto' }}
                      exit={{ opacity: 0, height: 0 }}
                      className="space-y-4"
                    >
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div className="bg-white/10 rounded-xl p-4">
                          <h4 className="text-white font-medium mb-2">–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞</h4>
                          <p className="text-white/60 text-sm mb-3">AI —Å–æ–∑–¥–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –ø–æ–¥ –∫–∞–∂–¥—É—é –≤–∞–∫–∞–Ω—Å–∏—é</p>
                          <div className="flex items-center space-x-2 text-green-400 text-sm">
                            <CheckCircle className="w-4 h-4" />
                            <span>–ê–∫—Ç–∏–≤–Ω–æ</span>
                          </div>
                        </div>
                        <div className="bg-white/10 rounded-xl p-4">
                          <h4 className="text-white font-medium mb-2">–£–º–Ω—ã–π –ø–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π</h4>
                          <p className="text-white/60 text-sm mb-3">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π</p>
                          <div className="flex items-center space-x-2 text-blue-400 text-sm">
                            <Target className="w-4 h-4" />
                            <span>–ù–∞—Å—Ç—Ä–æ–µ–Ω–æ</span>
                          </div>
                        </div>
                      </div>
                      <div className="bg-white/10 rounded-xl p-4">
                        <h4 className="text-white font-medium mb-2">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–æ–≤</h4>
                        <div className="grid grid-cols-3 gap-4 text-center">
                          <div>
                            <div className="text-2xl font-bold text-white">24</div>
                            <div className="text-white/60 text-sm">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</div>
                          </div>
                          <div>
                            <div className="text-2xl font-bold text-white">8</div>
                            <div className="text-white/60 text-sm">–û—Ç–≤–µ—Ç–æ–≤</div>
                          </div>
                          <div>
                            <div className="text-2xl font-bold text-white">3</div>
                            <div className="text-white/60 text-sm">–ò–Ω—Ç–µ—Ä–≤—å—é</div>
                          </div>
                        </div>
                      </div>
                    </motion.div>
                  )}
                </div>

                {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Ä–µ–∑—é–º–µ */}
                <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/20">
                  <div className="flex items-center space-x-4 mb-6">
                    <div className="w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center">
                      <User className="w-10 h-10 text-white" />
                    </div>
                    <div>
                      <h2 className="text-2xl font-bold text-white">{resumeData.personalInfo.name}</h2>
                      <p className="text-xl text-white/70">{resumeData.personalInfo.title}</p>
                      <div className="flex items-center space-x-4 text-white/60 text-sm mt-2">
                        <span>–û–ø—ã—Ç: {resumeData.personalInfo.experience}</span>
                        <span>üìç {resumeData.personalInfo.location}</span>
                      </div>
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <h3 className="text-lg font-semibold text-white mb-4">–ù–∞–≤—ã–∫–∏</h3>
                      <div className="space-y-3">
                        {resumeData.skills.map((skill, index) => (
                          <div key={index}>
                            <div className="flex justify-between text-sm mb-1">
                              <span className="text-white/80">{skill.name}</span>
                              <span className="text-white/60">{skill.level}%</span>
                            </div>
                            <div className="w-full bg-white/10 rounded-full h-2">
                              <div 
                                className="bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full transition-all duration-1000"
                                style={{ width: `${skill.level}%` }}
                              ></div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>

                    <div>
                      <h3 className="text-lg font-semibold text-white mb-4">–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</h3>
                      <div className="space-y-4">
                        {resumeData.experience.map((exp, index) => (
                          <div key={index} className="border-l-2 border-purple-500 pl-4">
                            <h4 className="text-white font-medium">{exp.position}</h4>
                            <p className="text-white/70 text-sm">{exp.company}</p>
                            <p className="text-white/60 text-xs">{exp.period}</p>
                            <p className="text-white/80 text-sm mt-1">{exp.description}</p>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>

                  <div className="mt-6 pt-6 border-t border-white/10">
                    <h3 className="text-lg font-semibold text-white mb-4">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</h3>
                    {resumeData.education.map((edu, index) => (
                      <div key={index} className="flex items-center space-x-3">
                        <div className="w-3 h-3 bg-blue-500 rounded-full"></div>
                        <div>
                          <p className="text-white font-medium">{edu.degree}</p>
                          <p className="text-white/70 text-sm">{edu.institution}</p>
                          <p className="text-white/60 text-xs">{edu.period}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            )}

            {/* –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã */}
            {currentSection === 'prospects' && (
              <div className="space-y-8">
                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ */}
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  {marketStats.map((stat, index) => (
                    <motion.div
                      key={index}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.5, delay: index * 0.1 }}
                      className="bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20 text-center hover:bg-white/15 transition-all duration-300"
                    >
                      <div className={`w-16 h-16 bg-gradient-to-r ${stat.color} rounded-xl flex items-center justify-center mx-auto mb-4`}>
                        <stat.icon className="w-8 h-8 text-white" />
                      </div>
                      <div className="text-3xl font-bold text-white mb-2">{stat.value}</div>
                      <div className="text-white/70">{stat.label}</div>
                    </motion.div>
                  ))}
                </div>

                {/* –ö–∞—Ä—å–µ—Ä–Ω—ã–µ –ø—É—Ç–∏ */}
                <div>
                  <h2 className="text-2xl font-bold text-white mb-6">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –ø—É—Ç–∏</h2>
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {careerPaths.map((path, index) => (
                      <motion.div
                        key={index}
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: index * 0.1 }}
                        className="bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20 hover:bg-white/15 transition-all duration-300 hover:scale-105"
                      >
                        <div className={`w-12 h-12 rounded-lg bg-gradient-to-r ${path.color} mb-4 flex items-center justify-center`}>
                          <span className="text-white text-xl">{path.icon}</span>
                        </div>
                        <h3 className="text-xl font-semibold text-white mb-2">{path.title}</h3>
                        <p className="text-white/70 text-sm mb-4">{path.description}</p>
                        
                        <div className="mb-4">
                          <div className="text-white/80 text-sm mb-2">–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏:</div>
                          <div className="flex flex-wrap gap-2">
                            {path.skills.slice(0, 3).map((skill, skillIndex) => (
                              <span key={skillIndex} className="px-2 py-1 bg-white/10 rounded text-xs text-white/80">
                                {skill}
                              </span>
                            ))}
                            {path.skills.length > 3 && (
                              <span className="px-2 py-1 bg-white/10 rounded text-xs text-white/60">
                                +{path.skills.length - 3}
                              </span>
                            )}
                          </div>
                        </div>

                        <div className="space-y-2 mb-4">
                          <div className="flex justify-between text-sm">
                            <span className="text-white/60">–ó–∞—Ä–ø–ª–∞—Ç–∞:</span>
                            <span className="text-white font-medium">{path.salary}</span>
                          </div>
                          <div className="flex justify-between text-sm">
                            <span className="text-white/60">–°–ø—Ä–æ—Å:</span>
                            <span className="text-white font-medium">{path.demand}</span>
                          </div>
                        </div>

                        <GradientButton variant="variant" size="sm" className="w-full">
                          –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
                        </GradientButton>
                      </motion.div>
                    ))}
                  </div>
                </div>

                {/* –ö–æ–º–ø–∞–Ω–∏–∏-–ø–∞—Ä—Ç–Ω–µ—Ä—ã */}
                <div>
                  <h2 className="text-2xl font-bold text-white mb-6">–ö–æ–º–ø–∞–Ω–∏–∏-–ø–∞—Ä—Ç–Ω–µ—Ä—ã</h2>
                  <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
                    {companies.map((company, index) => (
                      <motion.div
                        key={index}
                        initial={{ opacity: 0, scale: 0.8 }}
                        animate={{ opacity: 1, scale: 1 }}
                        transition={{ duration: 0.5, delay: index * 0.1 }}
                        className="bg-white/10 backdrop-blur-sm rounded-xl p-4 border border-white/20 text-center hover:bg-white/15 transition-all duration-300 hover:scale-105"
                      >
                        <div className="text-3xl mb-2">{company.logo}</div>
                        <div className="text-white font-medium text-sm">{company.name}</div>
                        <div className="text-white/60 text-xs">{company.description}</div>
                      </motion.div>
                    ))}
                  </div>
                </div>

                {/* –°–æ–≤–µ—Ç—ã –ø–æ –∫–∞—Ä—å–µ—Ä–µ */}
                <div className="bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20">
                  <h3 className="text-xl font-semibold text-white mb-4">–°–æ–≤–µ—Ç—ã –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –∫–∞—Ä—å–µ—Ä—ã –≤ IT</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div className="space-y-3">
                      <div className="flex items-start space-x-3">
                        <div className="w-6 h-6 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                          <span className="text-black text-xs">1</span>
                        </div>
                        <div>
                          <div className="text-white font-medium">–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</div>
                          <div className="text-white/60 text-sm">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è –±—ã—Å—Ç—Ä–æ, –≤–∞–∂–Ω–æ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ —Ç—Ä–µ–Ω–¥–æ–≤</div>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <div className="w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                          <span className="text-black text-xs">2</span>
                        </div>
                        <div>
                          <div className="text-white font-medium">–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã</div>
                          <div className="text-white/60 text-sm">–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏</div>
                        </div>
                      </div>
                    </div>
                    <div className="space-y-3">
                      <div className="flex items-start space-x-3">
                        <div className="w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                          <span className="text-black text-xs">3</span>
                        </div>
                        <div>
                          <div className="text-white font-medium">–°–µ—Ç–µ–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ</div>
                          <div className="text-white/60 text-sm">–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ IT —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö –∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ö</div>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <div className="w-6 h-6 bg-orange-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                          <span className="text-black text-xs">4</span>
                        </div>
                        <div>
                          <div className="text-white font-medium">Soft skills</div>
                          <div className="text-white/60 text-sm">–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é –∏ —Ä–∞–±–æ—Ç—É –≤ –∫–æ–º–∞–Ω–¥–µ</div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </motion.div>
        </AnimatePresence>
      </div>
      
      {/* –°–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
      {isLoading && (
        <div className="fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50">
          <MorphingSquare message="–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—å–µ—Ä—ã..." />
        </div>
      )}
      
      {/* AI –ü–æ–º–æ—â–Ω–∏–∫ */}
      <AIHelper />
    </div>
  )
}
