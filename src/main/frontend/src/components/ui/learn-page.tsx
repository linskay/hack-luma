import React, { useState } from 'react'
import { GradientButton } from './gradient-button'
import { AIHelper } from './ai-helper'

interface LearnPageProps {
  onNavigate: (page: string) => void
}

export function LearnPage({ onNavigate }: LearnPageProps) {
  const [selectedCourse, setSelectedCourse] = useState<string | null>(null)

  const courses = [
    {
      id: 'java-basics',
      title: '–û—Å–Ω–æ–≤—ã Java',
      description: '–ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Java',
      duration: '8 –Ω–µ–¥–µ–ª—å',
      level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
      topics: ['–ö–ª–∞—Å—Å—ã –∏ –æ–±—ä–µ–∫—Ç—ã', '–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', '–ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º', '–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è'],
      color: 'from-blue-500 to-cyan-500'
    },
    {
      id: 'spring-framework',
      title: 'Spring Framework',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å Spring',
      duration: '10 –Ω–µ–¥–µ–ª—å',
      level: '–°—Ä–µ–¥–Ω–∏–π',
      topics: ['IoC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä', 'AOP', 'Spring Boot', 'REST API'],
      color: 'from-green-500 to-emerald-500'
    },
    {
      id: 'react-development',
      title: 'React —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã',
      duration: '6 –Ω–µ–¥–µ–ª—å',
      level: '–°—Ä–µ–¥–Ω–∏–π',
      topics: ['–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã', '–•—É–∫–∏', '–†–æ—É—Ç–∏–Ω–≥', 'State Management'],
      color: 'from-purple-500 to-pink-500'
    },
    {
      id: 'database-design',
      title: '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ë–î',
      description: '–ò–∑—É—á–∏—Ç–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö',
      duration: '4 –Ω–µ–¥–µ–ª–∏',
      level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
      topics: ['ER –º–æ–¥–µ–ª–∏', '–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è', 'SQL', '–ò–Ω–¥–µ–∫—Å—ã'],
      color: 'from-orange-500 to-red-500'
    }
  ]

  return (
    <div className="min-h-screen">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <nav className="fixed top-0 left-0 right-0 z-50 bg-black/20 backdrop-blur-lg border-b border-white/10">
        <div className="max-w-6xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="text-white text-2xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
              &lt;BOO!/&gt;
            </div>
            <div className="flex items-center space-x-2">
              <button
                onClick={() => onNavigate('profile')}
                className="relative px-6 py-3 text-white/80 hover:text-white rounded-full transition-all duration-300 hover:bg-white/10 group overflow-hidden"
              >
                <span className="relative z-10">–ü—Ä–æ—Ñ–∏–ª—å</span>
                <div className="absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-full"></div>
              </button>
              <button
                onClick={() => onNavigate('learn')}
                className="relative px-6 py-3 text-white/80 hover:text-white rounded-full transition-all duration-300 hover:bg-white/10 group overflow-hidden bg-white/20"
              >
                <span className="relative z-10">–£—á–∏—Ç—å—Å—è</span>
                <div className="absolute inset-0 bg-gradient-to-r from-green-500/20 to-blue-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-full"></div>
              </button>
              <button
                onClick={() => onNavigate('prices')}
                className="relative px-6 py-3 text-white/80 hover:text-white rounded-full transition-all duration-300 hover:bg-white/10 group overflow-hidden"
              >
                <span className="relative z-10">–¶–µ–Ω—ã</span>
                <div className="absolute inset-0 bg-gradient-to-r from-yellow-500/20 to-orange-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-full"></div>
              </button>
              <button
                onClick={() => onNavigate('logout')}
                className="relative px-6 py-3 text-white/80 hover:text-white rounded-full transition-all duration-300 hover:bg-white/10 group overflow-hidden"
              >
                <span className="relative z-10">–í—ã—Ö–æ–¥</span>
                <div className="absolute inset-0 bg-gradient-to-r from-red-500/20 to-pink-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-full"></div>
              </button>
            </div>
          </div>
        </div>
      </nav>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-6xl mx-auto p-8 pt-32">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-white mb-4">–û–±—É—á–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é</h1>
          <p className="text-white/70 text-lg">–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –≤ IT!</p>
        </div>

        {/* –ö—É—Ä—Å—ã */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
          {courses.map((course) => (
            <div
              key={course.id}
              className={`bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20 hover:bg-white/15 transition-all duration-300 hover:scale-105 cursor-pointer ${
                selectedCourse === course.id ? 'ring-2 ring-purple-500' : ''
              }`}
              onClick={() => setSelectedCourse(course.id)}
            >
              <div className={`w-16 h-16 bg-gradient-to-r ${course.color} rounded-lg flex items-center justify-center mb-4`}>
                <span className="text-white text-2xl">
                  {course.id === 'java-basics' && '‚òï'}
                  {course.id === 'spring-framework' && 'üå±'}
                  {course.id === 'react-development' && '‚öõÔ∏è'}
                  {course.id === 'database-design' && 'üóÑÔ∏è'}
                </span>
              </div>
              
              <h3 className="text-xl font-semibold text-white mb-2">{course.title}</h3>
              <p className="text-white/70 text-sm mb-4">{course.description}</p>
              
              <div className="flex items-center justify-between mb-4">
                <span className="text-white/60 text-sm">{course.duration}</span>
                <span className="px-3 py-1 bg-white/20 rounded-full text-white text-xs">{course.level}</span>
              </div>
              
              <div className="space-y-2 mb-4">
                {course.topics.slice(0, 3).map((topic, index) => (
                  <div key={index} className="flex items-center space-x-2">
                    <div className="w-2 h-2 bg-purple-400 rounded-full"></div>
                    <span className="text-white/80 text-sm">{topic}</span>
                  </div>
                ))}
                {course.topics.length > 3 && (
                  <div className="text-white/60 text-sm">+{course.topics.length - 3} —Ç–µ–º</div>
                )}
              </div>
              
              <GradientButton variant="variant" size="sm" className="w-full">
                –ù–∞—á–∞—Ç—å –∫—É—Ä—Å
              </GradientButton>
            </div>
          ))}
        </div>

        {/* –í—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å */}
        {selectedCourse && (
          <div className="bg-white/10 backdrop-blur-sm rounded-xl p-6 border border-white/20">
            <h3 className="text-xl font-semibold text-white mb-4">
              –î–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞: {courses.find(c => c.id === selectedCourse)?.title}
            </h3>
            <p className="text-white/70 mb-4">
              –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ? –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –ø–µ—Ä–≤–æ–º—É —É—Ä–æ–∫—É.
            </p>
            <div className="flex space-x-4">
              <GradientButton variant="variant">
                –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ
              </GradientButton>
              <button
                onClick={() => setSelectedCourse(null)}
                className="px-6 py-3 text-white/80 hover:text-white rounded-lg transition-all duration-300 hover:bg-white/10"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        )}
      </div>
      
      {/* AI –ü–æ–º–æ—â–Ω–∏–∫ */}
      <AIHelper />
    </div>
  )
}
